/*****************************************
Name:                   programAPI.js
Creation Date:  21/03/2014
Last modified:  04/04/2014
Author:                 Kwinten Pardon

API calls and processing of resulting JSON
concerning programs

 *****************************************/
//global variable for use in other functions
var selected_program;
/*****************************************
Name:                   process_JSON_program
Creation Date:  02/04/2014
Last modified:  04/04/2014
Author:                 Kwinten Pardon
Parameters:     divID: The id where the information should be displayed
returns:                function to be used as a callback in the AJAX call

*****************************************/
function process_JSON_program(divID, key){

    $.each(data, function(key, val)
   {
     // We want the values correspondending the key: 'programs'
     // The key may also be 'result' if the JSON is generated by a find POST request
     // We check if we have the expected key
     if (key === 'programs'){
       // variable creation
       var id ;
       var title ;

       // because strange JSON constructions makes for multiple loops
       $.each(val, function(key, val){
           $.each(val, function(key, val){
               // we store the value of title in the variable 'title'
               if (key == 'title'){
                  title = val;
               }
               // Same applies to program-id
               else if (key == 'id'){
                  id = val;
               }
           })
           // Store the information in the programs array
           programs.push("<li id='" + id + "' class='list-item btn program-item'>" + title + "</li>");
       })


      }
   })
    // Writing the information to the html div addressed by there given ID
    $(divID).empty();
    $(divID).append("<ul id='program-list' class='listing'></ul>");

    $.each(programs, function(index, value) {
        $("#program-list").append(value);
    });
  }
}


/*
  Name: list_programs
  Arguments:      divID: Required ID of the div where the programs should be listed
  keyword: optional keyword when you are searching for a specific program
  Returns: Void
  Author: Kwinten Pardon
  Date: 01/04/2014
*/
// TODO !! list en find moeten uit elkaar gehaald worden, na het "zoeken" naar programma's worden geen 
// vakken meer gedisplayed noch descriptions
function list_programs(divID){

    try {
      // If divID is empty (required parameter)
      // We throw an error stating that divID is required
      if (typeof divID === 'undefined') {
          throw("Requires divID");
      }

      var url = '/api/program/list';

      $.ajax(
        {
          type: "GET",
          url: url,
          success: process_JSON_program(divID),
          dataType: "JSON"
        });
    } catch(error) {
      console.error(error);
    }
}



$('#keyword').bind("change keyup", function() {
  searchWord = $(this).val();
  if (searchWord.length >= 3) {
    $('ul.listing li').each(function() {
      text = $(this).text();
      if (text.match(RegExp(searchWord, 'i'))) {
        $(this).show();
      }
      else {
        $(this).hide();
      }
    });
  }
  if (searchWord.length == 0){
    list_programs("#PE-program-list");
  }
});


function create_program_success(data){
    console.info(data);
}

function create_program(){

    var form = $("#program-creation")[0];

    var title = form.title.value;
    var description = form.description.value;
    var manager = form.manager.value;

    if ( title === '' ||  description === '' || manager === ''){
        throw "form may not contain empty values";
    }

    var data = new Object();
    data.title = title;
    data.description = description;
    data.manager = manager
    data.mandatory = [];
    data.optional = []
    data = JSON.stringify(data);

    url = apiprogram("add");

    $.ajax({
        type: "POST",
        url: url,
        data: data,
        processData: false,
        contentType: "application/json",
        success: function (data){console.info(data); form.reset();},
        dataType: "JSON",

    });

    $("#NewProgram").modal("hide");

    return false;
}

function delete_program(program_id){

    url = apiprogram("del").concat("/" + program_id);

    $.ajax({
        type: "DELETE",
        url: url,
        success: function (data) {console.info(data)}
    })
}

// update information globally refreshes the page
$('#refreshcontent').click(function() {
    location.reload(true);
});

$("#programs").on("mousedown", ".program-item", function (){
    $('.program-item').removeClass('active');
    $(this).addClass('active');
    list_courses_by_program("#courses", this.id);
})

$("#PE-program-list").on("mousedown", ".program-item", function (){
    $('.program-item').removeClass('active');
    $(this).addClass('active');
    selected_program = this.id;
    $('#delete_program_button').empty()
    $('#delete_program_button').append("<button class=\"btn btn-danger btn-lg\" onclick=\"delete_program(\'" + this.id + "\')\">Delete Program</button>")
    list_courses_by_program("#PE-course-list", this.id);
})

$(document).ready(function() {
  list_programs("#PE-program-list");
});
  
